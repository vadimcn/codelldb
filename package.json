{
	"name": "vscode-lldb",
	"displayName": "CodeLLDB",
	"version": "@VERSION@",
	"publisher": "vadimcn",
	"description": "Debug your native code with LLDB.",
	"license": "MIT",
	"author": {
		"name": "vadimcn"
	},
	"engines": {
		"vscode": "^1.30.0",
		"node": "^10.0"
	},
	"icon": "images/lldb.png",
	"categories": [
		"Debuggers"
	],
	"keywords": [
		"LLDB",
		"Native",
		"C++",
		"Rust",
		"Disassembly"
	],
	"private": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/vadimcn/vscode-lldb.git"
	},
	"bugs": {
		"url": "https://github.com/vadimcn/vscode-lldb/issues"
	},
	"qna": "https://gitter.im/vscode-lldb/QnA",
	"dependencies": {
		"yauzl": "^2.10.0"
	},
	"devDependencies": {
		"@types/mocha": "^5.2.0",
		"@types/node": "^10.2",
		"mocha": "^6.1.0",
		"typescript": "^3.4",
		"vscode": "^1.1.30",
		"vscode-debugadapter-testsupport": "^1.34.0",
		"vscode-debugprotocol": "^1.34.0",
		"memory-streams": "^0.1.3",
		"@types/yauzl": "^2.9.0"
	},
	"scripts": {
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"main": "extension/main",
	"activationEvents": [
		"*"
	],
	"contributes": {
		"commands": [
			{
				"category": "LLDB",
				"title": "Display Format ...",
				"command": "lldb.displayFormat"
			},
			{
				"category": "LLDB",
				"title": "Show Disassembly ...",
				"command": "lldb.showDisassembly"
			},
			{
				"category": "LLDB",
				"title": "Toggle Disassembly",
				"command": "lldb.toggleDisassembly"
			},
			{
				"category": "LLDB",
				"title": "Toggle Pointee Summaries",
				"command": "lldb.toggleDerefPointers"
			},
			{
				"category": "LLDB",
				"title": "Run Diagnostics",
				"command": "lldb.diagnose"
			},
			{
				"category": "LLDB",
				"title": "Generate launch configurations from Cargo.toml",
				"command": "lldb.getCargoLaunchConfigs"
			},
			{
				"category": "LLDB",
				"title": "Display Options...",
				"command": "lldb.changeDisplaySettings"
			},
			{
				"category": "LLDB",
				"title": "Set Next Statement",
				"command": "lldb.setNextStatement"
			}
		],
		"keybindings": [
			{
				"command": "lldb.setNextStatement",
				"key": "Ctrl+Shift+F10",
				"when": "inDebugMode && debugType == 'lldb'"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "lldb.setNextStatement",
					"when": "inDebugMode && debugType == 'lldb'"
				}
			]
		},
		"languages": [
			{
				"id": "lldb.disassembly",
				"aliases": [
					"Disassembly"
				],
				"extensions": [
					".disasm"
				]
			}
		],
		"grammars": [
			{
				"language": "lldb.disassembly",
				"scopeName": "source.disassembly",
				"path": "./syntaxes/disassembly.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "LLDB",
			"properties": {
				"lldb.executable": {
					"description": "Which LLDB to use.",
					"default": "lldb",
					"type": "string",
					"scope": "resource"
				},
				"lldb.library": {
					"markdownDescription": "Which LLDB library to use (native adapter only).\n\n This can be either a file path (recommended) or a directory, in which case platform-specific heuristics will be used to locate the actual library file.",
					"type": "string",
					"scope": "resource"
				},
				"lldb.adapterType": {
					"description": "Which debug adapter implementation to use.",
					"type": "string",
					"default": "classic",
					"enum": [
						"classic",
						"bundled",
						"native"
					],
					"enumDescriptions": [
						"Use classic Python-based debug adapter",
						"Use LLDB engine provided by this extension.  Requires one-time download of platform-specific files.",
						"Use native debug adapter.  Requires one-time download of platform-specific files."
					],
					"scope": "resource"
				},
				"lldb.adapterEnv": {
					"description": "Extra environment variables for the debug adapter.",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": "string"
						}
					},
					"default": {},
					"scope": "resource"
				},
				"lldb.verboseLogging": {
					"description": "Turns on verbose logging.",
					"type": "boolean",
					"default": false,
					"scope": "resource"
				},
				"lldb.suppressMissingSourceFiles": {
					"description": "Suppress VSCode's missing source file errors (requires probing for existence of the source file).",
					"type": "boolean",
					"scope": "resource"
				},
				"lldb.evaluationTimeout": {
					"description": "Timeout for expression evaluation, in seconds.",
					"type": "number",
					"default": 5,
					"scope": "resource"
				},
				"lldb.displayFormat": {
					"description": "Default format for displayed variable values.",
					"type": "string",
					"enum": [
						"auto",
						"hex",
						"decimal",
						"binary"
					],
					"default": "auto",
					"scope": "resource"
				},
				"lldb.showDisassembly": {
					"description": "When to show disassembly.",
					"type": "string",
					"enum": [
						"auto",
						"never",
						"always"
					],
					"default": "auto",
					"enumDescriptions": [
						"Only when source is not available.",
						"Never show.",
						"Always show, even if source is available."
					],
					"scope": "resource"
				},
				"lldb.dereferencePointers": {
					"description": "Whether to show a summary of the pointee, or a numeriric value for pointers.",
					"type": "boolean",
					"default": true,
					"scope": "resource"
				},
				"lldb.launch.initCommands": {
					"description": "Commands executed *before* initCommands in individual launch configurations.",
					"type": "array",
					"default": [],
					"scope": "resource"
				},
				"lldb.launch.preRunCommands": {
					"description": "Commands executed *before* preRunCommands in individual launch configurations.",
					"type": "array",
					"default": [],
					"scope": "resource"
				},
				"lldb.launch.postRunCommands": {
					"description": "Commands executed *before* postRunCommands in individual launch configurations.",
					"type": "array",
					"default": [],
					"scope": "resource"
				},
				"lldb.launch.exitCommands": {
					"description": "Commands executed *after* exitCommands in individual launch configurations.",
					"type": "array",
					"default": [],
					"scope": "resource"
				},
				"lldb.launch.env": {
					"description": "Additional environment variables merged with 'env' individual launch configurations.",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": "string"
						}
					},
					"default": {},
					"scope": "resource"
				},
				"lldb.launch.cwd": {
					"description": "Default program working directory.",
					"type": "string",
					"default": "${workspaceFolder}",
					"scope": "resource"
				},
				"lldb.launch.terminal": {
					"description": "Default terminal type.",
					"type": "string",
					"enum": [
						"integrated",
						"external",
						"console"
					],
					"enumDescriptions": [
						"Use integrated terminal in VSCode.",
						"Use external terminal window.",
						"Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."
					],
					"default": "console",
					"scope": "resource"
				},
				"lldb.launch.stdio": {
					"description": "Default stdio destination.",
					"type": [
						"null",
						"string",
						"array",
						"object"
					],
					"default": null,
					"scope": "resource"
				},
				"lldb.launch.sourceMap": {
					"description": "Additional entries that will be merged with 'sourceMap's of individual launch configurations.",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": [
								"string",
								"null"
							]
						}
					},
					"default": {},
					"scope": "resource"
				},
				"lldb.launch.sourceLanguages": {
					"description": "A list of source languages to enable language-specific features for.",
					"type": "array",
					"default": [
						"cpp",
						"rust"
					]
				},
				"lldb.launch.expressions": {
					"description": "The default evaluator type used for expressions.",
					"type": "string",
					"enum": [
						"simple",
						"python",
						"native"
					]
				},
				"lldb.launch.debugServer": {
					"description": "Debug server port.",
					"type": "number",
					"default": 4711
				},
				"lldb.dbgconfig": {
					"description": "Common used-defined settings that can be inserted into launch configurations using ${dbgconfig:name} syntax.",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": [
								"string",
								"number",
								"array",
								"boolean",
								"null"
							]
						}
					},
					"default": {},
					"scope": "resource"
				}
			}
		},
		"debuggers": [
			{
				"type": "lldb",
				"label": "LLDB",
				"enableBreakpointsFor": {
					"languageIds": [
						"ada",
						"arm",
						"asm",
						"c",
						"cpp",
						"crystal",
						"d",
						"fortran",
						"fortran-modern",
						"lldb.disassembly",
						"nim",
						"objective-c",
						"objectpascal",
						"pascal",
						"rust",
						"swift"
					]
				},
				"variables": {
					"pickProcess": "lldb.pickProcess",
					"pickMyProcess": "lldb.pickMyProcess"
				},
				"configurationAttributes": {
					"launch": {
						"properties": {
							"program": {
								"description": "Path to the program to debug.",
								"type": "string"
							},
							"cargo": {
								"description": "Cargo invocation parameters.",
								"type": "object",
								"properties": {
									"args": {
										"description": "Cargo command line arguments.",
										"type": "array",
										"default": [
											"test",
											"--no-run"
										]
									},
									"filter": {
										"description": "Filter applied to compilation artifacts.",
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"kind": {
												"type": "string"
											}
										}
									}
								},
								"required": [
									"args"
								]
							},
							"args": {
								"description": "Program arguments.",
								"type": [
									"array",
									"string"
								],
								"default": []
							},
							"cwd": {
								"description": "Program working directory.",
								"type": "string",
								"default": "${workspaceFolder}"
							},
							"env": {
								"description": "Additional environment variables.",
								"type": "object",
								"patternProperties": {
									".*": {
										"type": "string"
									}
								},
								"default": {}
							},
							"stdio": {
								"description": "Destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.",
								"type": [
									"null",
									"string",
									"array",
									"object"
								],
								"default": null
							},
							"terminal": {
								"description": "Terminal type to use.",
								"type": "string",
								"enum": [
									"integrated",
									"external",
									"console"
								],
								"enumDescriptions": [
									"Use integrated terminal in VSCode.",
									"Use external terminal window.",
									"Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."
								],
								"default": "integrated"
							},
							"stopOnEntry": {
								"description": "Automatically stop debuggee after launch.",
								"type": "boolean",
								"default": true
							},
							"initCommands": {
								"description": "Initialization commands executed upon debugger startup.",
								"type": "array",
								"default": []
							},
							"preRunCommands": {
								"description": "Commands executed just before the program is launched.",
								"type": "array",
								"default": []
							},
							"postRunCommands": {
								"description": "Commands executed just after the program has been launched.",
								"type": "array",
								"default": []
							},
							"exitCommands": {
								"description": "Commands executed at the end of debugging session.",
								"type": "array",
								"default": []
							},
							"expressions": {
								"description": "The default evaluator type used for expressions.",
								"type": "string",
								"enum": [
									"simple",
									"python",
									"native"
								]
							},
							"sourceMap": {
								"description": "Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.",
								"type": "object",
								"patternProperties": {
									".*": {
										"type": [
											"string",
											"null"
										]
									}
								},
								"default": {}
							},
							"sourceLanguages": {
								"description": "A list of source languages to enable language-specific features for.",
								"type": "array",
								"default": []
							},
							"custom": {
								"deprecationMessage": "Deprecated, use \"request\":\"custom\" instead.",
								"type": "boolean"
							}
						},
						"oneOf": [
							{
								"required": [
									"program"
								]
							},
							{
								"required": [
									"cargo"
								]
							}
						]
					},
					"attach": {
						"properties": {
							"program": {
								"description": "Path to the program to attach to.",
								"type": "string"
							},
							"pid": {
								"description": "Process id to attach to.",
								"type": [
									"number",
									"string"
								],
								"default": "${command:pickMyProcess}"
							},
							"stopOnEntry": {
								"description": "Automatically stop debuggee after attach.",
								"type": "boolean",
								"default": true
							},
							"waitFor": {
								"description": "Wait for the process to launch.",
								"type": "boolean",
								"default": true
							},
							"initCommands": {
								"description": "Initialization commands executed upon debugger startup.",
								"type": "array",
								"default": []
							},
							"preRunCommands": {
								"description": "Commands executed just before the program is attached to.",
								"type": "array",
								"default": []
							},
							"postRunCommands": {
								"description": "Commands executed just after the program has been attached to.",
								"type": "array",
								"default": []
							},
							"exitCommands": {
								"description": "Commands executed at the end of debugging session.",
								"type": "array",
								"default": []
							},
							"expressions": {
								"description": "The default evaluator type used for expressions.",
								"type": "string",
								"enum": [
									"simple",
									"python",
									"native"
								]
							},
							"sourceMap": {
								"description": "Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.",
								"type": "object",
								"patternProperties": {
									".*": {
										"type": [
											"string",
											"null"
										]
									}
								},
								"default": {}
							},
							"sourceLanguages": {
								"description": "A list of source languages to enable language-specific features for.",
								"type": "array",
								"default": []
							}
						}
					},
					"custom": {
						"properties": {
							"targetCreateCommands": {
								"description": "Commands that will create debug target.",
								"type": "array",
								"default": []
							},
							"processCreateCommands": {
								"description": "Commands that will create debuggee process.",
								"type": "array",
								"default": []
							},
							"exitCommands": {
								"description": "Commands executed at the end of debugging session.",
								"type": "array",
								"default": []
							},
							"expressions": {
								"description": "The default evaluator type used for expressions.",
								"type": "string",
								"enum": [
									"simple",
									"python",
									"native"
								]
							},
							"sourceMap": {
								"description": "Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.",
								"type": "object",
								"patternProperties": {
									".*": {
										"type": [
											"string",
											"null"
										]
									}
								},
								"default": {}
							},
							"sourceLanguages": {
								"description": "A list of source languages to enable language-specific features for.",
								"type": "array",
								"default": []
							},
							"initCommands": {
								"deprecationMessage": "Deprecated, use \"targetCreateCommands\" instead.",
								"type": "array"
							},
							"preRunCommands": {
								"deprecationMessage": "Deprecated, use \"processCreateCommands\" instead.",
								"type": "array"
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "LLDB: Launch a New Process",
						"body": {
							"type": "lldb",
							"request": "launch",
							"name": "${2:Launch}",
							"program": "^\"\\${workspaceFolder}/${1:<your program>}\"",
							"args": [],
							"cwd": "^\"\\${workspaceFolder}\""
						}
					},
					{
						"label": "LLDB: Attach by PID",
						"body": {
							"type": "lldb",
							"request": "attach",
							"name": "${2:Attach}",
							"pid": "^\"\\${command:pickMyProcess}\" // use \\${command:pickProcess} to pick other users' processes"
						}
					},
					{
						"label": "LLDB: Attach by Name",
						"body": {
							"type": "lldb",
							"request": "attach",
							"name": "${2:Attach}",
							"program": "^\"\\${workspaceFolder}/${1:<your program>}\""
						}
					},
					{
						"label": "LLDB: Custom Launch",
						"body": {
							"type": "lldb",
							"request": "custom",
							"name": "${2:Custom launch}",
							"targetCreateCommands": [
								"^\"target create \\${workspaceFolder}/${1:<your program>}\""
							],
							"processCreateCommands": [
								"settings set target.run-args ${3:value1 value2 value3}",
								"process launch"
							]
						}
					},
					{
						"label": "LLDB: Debug Cargo Output",
						"body": {
							"type": "lldb",
							"request": "launch",
							"name": "${2:Cargo launch}",
							"cargo": {
								"args": [
									"build",
									"${1:--lib}"
								]
							},
							"program": "^\"\\${cargo:program}\"",
							"args": []
						}
					},
					{
						"label": "LLDB: Debug Cargo Tests",
						"body": {
							"type": "lldb",
							"request": "launch",
							"name": "${2:Cargo test}",
							"cargo": {
								"args": [
									"test",
									"--no-run",
									"${1:--lib}"
								]
							},
							"program": "^\"\\${cargo:program}\"",
							"args": []
						}
					}
				]
			}
		]
	},
	"config": {
		"platformPackages": {
			"url": "https://github.com/vadimcn/vscode-lldb/releases/download/v${version}/${platformPackage}",
			"platforms": {
				"linux": "vscode-lldb-linux.vsix",
				"darwin": "vscode-lldb-osx.vsix",
				"win32": "vscode-lldb-windows.vsix"
			}
		}
	}
}
